---
# THIS PLAYBOOK MUST BE RUN FROM CLI
# PLEASE RUN WITH ANSIBLE-PLAYBOOK COMMAND
# ansible-playbook setup.yml

# - name: TOWER CONFIGURATION IN PLAYBOOK FORM
#   hosts: ansible
#   connection: local
#   become: yes
#   gather_facts: no
#   tasks:
#     - name: CREATE NETWORK WORKFLOW
#       tower_workflow_template:
#         name: WORKFLOW AUTOMATED
#         description: configure user and system properties
#         organization: Default
#         schema: "{{ lookup('file', 'network_workflow.yml') }}"

- hosts: localhost
  gather_facts: false
  vars:
    workflow_name: "cmeyers test"
  tasks:
    - name: "Get backup network config job template"
      shell: tower-cli job_template get -n "BACKUP NETWORK CONFIG" -f json | jq ".id"
      register: jt_backup_network_config

    - name: "Get configure user job template"
      shell: tower-cli job_template get -n "CONFIGURE USER" -f json | jq ".id"
      register: jt_configure_user

    - name: "Get CONFIGURE SYSTEM PROPERTIES (hostname, domain name, domain search, DNS) job template"
      shell: tower-cli job_template get -n "CONFIGURE SYSTEM PROPERTIES (hostname, domain name, domain search, DNS)" -f json | jq ".id"
      register: jt_system_properties

    - name: "Get RESTORE NETWORK CONFIG job template"
      shell: tower-cli job_template get -n "RESTORE NETWORK CONFIG" -f json | jq ".id"
      register: jt_restore_network_config

    - name: "Delete workflow"
      shell: tower-cli workflow delete -n "{{ workflow_name }}" -f json

    - name: "Create workflow"
      shell: tower-cli workflow create -n "{{ workflow_name }}" -f json

    - name: "Create backup network config node"
      shell: tower-cli node create -W "{{ workflow_name }}" --unified-job-template {{ jt_backup_network_config.stdout }} -f json | jq ".id"
      register: node_jt_backup_network_config

    - name: "Create configure user job template"
      shell: tower-cli node create -W "{{ workflow_name }}" --unified-job-template {{ jt_configure_user.stdout }} -f json | jq ".id"
      register: node_jt_configure_user

    - name: "Create CONFIGURE SYSTEM PROPERTIES (hostname, domain name, domain search, DNS) job template"
      shell: tower-cli node create -W "{{ workflow_name }}" --unified-job-template {{ jt_system_properties.stdout }} -f json | jq ".id"
      register: node_jt_system_properties

    - name: "Create RESTORE NETWORK CONFIG job template"
      shell: tower-cli node create -W "{{ workflow_name }}" --unified-job-template {{ jt_restore_network_config.stdout }} -f json | jq ".id"
      register: node_jt_restore_network_config

    - name: "Relate"
      shell: tower-cli node associate_success_node --workflow-job-template "{{ workflow_name }}" {{ node_jt_backup_network_config.stdout }} {{ node_jt_configure_user.stdout }} -f json

    - name: "Relate"
      shell: tower-cli node associate_success_node --workflow-job-template "{{ workflow_name }}" {{ node_jt_backup_network_config.stdout }} {{ node_jt_system_properties.stdout }} -f json

    - name: "Relate"
      shell: tower-cli node associate_failure_node --workflow-job-template "{{ workflow_name }}" {{ node_jt_configure_user.stdout }} {{ node_jt_restore_network_config.stdout }} -f json

    - name: "Relate"
      shell: tower-cli node associate_failure_node --workflow-job-template "{{ workflow_name }}" {{ node_jt_system_properties.stdout }} {{ node_jt_restore_network_config.stdout }} -f json
